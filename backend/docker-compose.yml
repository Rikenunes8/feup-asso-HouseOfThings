version: "3.9"

services:
  flask:
    container_name: flask
    build:
      context: .
    restart: unless-stopped
    environment:
      APP_ENV: ${APP_ENV:-development}
      MONGODB_USERNAME: ${MONGODB_USERNAME:-user}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD:-DEFAULT_PASSWORD_DO_NOT_USE}
      MONGODB_HOSTNAME: ${MONGODB_HOSTNAME:-mongodb}
      MONGODB_PORT: ${MONGODB_PORT:-27017}
      MONGODB_DATABASE: ${MONGODB_DATABASE:-HoT}
      MQTT_BROKER: ${MQTT_BROKER:-mqtt}
      MQTT_PORT: ${MQTT_PORT:-1883}
      MQTT_USERNAME: ${MQTT_USERNAME:-emqx}
      MQTT_PASSWORD: ${MQTT_PASSWORD:-DEFAULT_PASSWORD_DO_NOT_USE}
    volumes:
      - .:/app/backend
    ports:
      - 5000:5000
    depends_on:
      - mongodb
    networks:
      - backend

  mongodb:
    image: mongo:6.0.4
    container_name: mongodb
    restart: unless-stopped
    command: mongod --logpath /var/log/mongodb/mongo.log --logappend --oplogSize 128 --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD:-DEFAULT_PASSWORD_DO_NOT_USE}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE:-HoT}
      HOT_USERNAME: ${MONGODB_USERNAME:-user}
      HOT_PASSWORD: ${MONGODB_PASSWORD:-DEFAULT_PASSWORD_DO_NOT_USE}
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /var/log/mongodb
    volumes:
      - ./data/db:/data/db
      - ./logs:/var/log/mongodb
      - "./mongo-entrypoint/:/docker-entrypoint-initdb.d/:ro"
    ports:
      - ${MONGODB_PORT:-27017}:27017
    networks:
      - backend

  mqtt:
    image: emqx/emqx:5.0.25
    container_name: mqtt
    restart: unless-stopped
    environment:
      EMQX_NAME: mqtt
      EMQX_HOST: 127.0.0.1
      EMQX_NODE__COOKIE: ${MQTT_SECRET:-DEFAULT_PASSWORD_DO_NOT_USE}
      EMQX_LOG__TO: both
      EMQX_ALLOW__ANONYMOUS: "false"
      EMQX_ACL__NOMATCH: deny
    ports:
      - ${MQTT_PORT:-1883}:1883
      - 8081:8081
      - 8083:8083
      - 8084:8084
      - 8883:8883
      - 18083:18083
    volumes:
      - ./data/mqtt:/opt/emqx/data
      - ./logs/mqtt:/opt/emqx/log
    networks:
      - backend

networks:
  backend:
    driver: bridge
