---
openapi: 3.0.0
info:
  title: House of Things
  description: The API for the House of Things IOT project
  version: 1.0.0
paths:
  /heartbeat:
    get:
      tags:
        - Health check
      description: Checks the server connection
      operationId: heartbeat
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status_ok"
  /devices:
    get:
      tags:
        - Devices
      description: Returns all the connected devices
      operationId: getDevices
      responses:
        "200":
          description: All the connected devices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/devices"
  /devices/available:
    get:
      tags:
        - Devices
      operationId: discovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/connect_body"
      responses:
        "200":
          description: Succesfully retrieved available devices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/available"
  /devices/{uid}/connect:
    post:
      tags:
        - Devices
      operationId: connect
      parameters:
        - name: uid
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/connect_body"
      responses:
        "200":
          description: Successfully connected device
  /devices/{uid}/disconnect:
    post:
      tags:
        - Devices
      operationId: disconnect
      parameters:
        - name: uid
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successfully disconnected device
  /devices/{uid}/action:
    post:
      tags:
        - Devices
      operationId: action
      parameters:
        - name: uid
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/action_body"
            examples:
              Turn Light On:
                value:
                  action: turnOn
              Turn Light Off:
                value:
                  action: turnOff
      responses:
        "200":
          description: Successfully actioned device
  /devices/{uid}/rename:
    post:
      tags:
        - Devices
      operationId: rename
      parameters:
        - name: uid
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/rename_body"
      responses:
        "200":
          description: Successfully renamed device
  /categories:
    get:
      tags:
        - Categories
      description: Returns all the device categories available
      operationId: getCategories
      responses:
        "200":
          description: All the device categories available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/categories"
  /divisions:
    get:
      tags:
        - Divisions
      description: Returns all the divisions
      operationId: getDivisions
      responses:
        "200":
          description: All the divisions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/divisions"
    post:
      tags:
        - Divisions
      description: Creates a new division
      operationId: createDivision
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/division"
      responses:
        "200":
          description: Successfully created division
  /divisions/{id}:
    delete:
      tags:
        - Divisions
      description: Deletes a division
      operationId: deleteDivision
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successfully deleted division
  /divisions/{id}/rename:
    post:
      tags:
        - Divisions
      description: Renames a division
      operationId: renameDivision
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/rename_body"
      responses:
        "200":
          description: Successfully renamed division
  /divisions/{id}/change-icon:
    post:
      tags:
        - Divisions
      description: Changes the icon of a division
      operationId: changeDivisionIcon
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/change_icon_body"
      responses:
        "200":
          description: Successfully changed division icon
  /divisions/{id}/add-device:
    post:
      tags:
        - Divisions
      description: Adds a device to a division
      operationId: addDeviceToDivision
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/device_uid_body"
      responses:
        "200":
          description: Successfully added device to division
  /divisions/{id}/remove-device:
    post:
      tags:
        - Divisions
      description: Removes a device from a division
      operationId: removeDeviceFromDivision
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/device_uid_body"
      responses:
        "200":
          description: Successfully removed device from division
  /rules:
    get:
      tags:
        - Rules
      description: Returns all the rules
      operationId: getRules
      responses:
        "200":
          description: All the rules
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rules"
    post:
      tags:
        - Rules
      description: Creates a new rule
      operationId: createRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/create_rule_body"
      responses:
        "200":
          description: Successfully created rule
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rule"
        "400":
          description: Invalid rule
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

components:
  schemas:
    status_ok:
      type: object
      properties:
        status:
          type: string
      example:
        status: ok
    devices:
      type: object
      properties:
        devices:
          type: array
          items:
            type: object
            properties:
              uid:
                type: string
              category:
                type: string
              name:
                type: string
              divisions:
                type: array
                items:
                  type: string
            additionalProperties:
              type: string
      example:
        devices:
          - uid: "1"
            category: light
            name: Bulb
            divisions: ["Room"]
            on: true
          - uid: "2"
            category: thermometer
            name: Termo
            divisions: ["Kitchen"]
            temperature: 23
    categories:
      type: object
      properties:
        categories:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              subcategories:
                type: array
                items:
                  type: string
      example:
        categories:
          - name: "light"
            subcategories:
              - light bulb
          - name: "sensor"
            subcategories:
              - montion sensor
              - temperature sensor
              - humidity sensor
          - name: security,
            subcategories:
              - camera
              - door lock
          - name: socket,
            subcategories:
              - extension socket
              - power socket
          - name: appliance,
            subcategories:
              - fan
              - tv
              - ac
              - heater
              - oven
              - washer
              - dryer
          - name: other,
            subcategories:
              - door bell
              - tv
    available:
      type: object
      properties:
        devices:
          type: array
          items:
            type: string
      example:
        devices:
          - "1"
          - "2"
    divisions:
      type: object
      properties:
        divisions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              icon:
                type: string
              numDevices:
                type: integer
            additionalProperties:
              type: string
      example:
        divisions:
          - id: "1"
            name: "Family Room"
            icon: "bedroom-icon"
            numDevices: 2
    division:
      type: object
      properties:
        name:
          type: string
        icon:
          type: string
        devices:
          type: array
          items:
            type: string
            description: Device UID
      example:
        name: "Family Room"
        icon: "bedroom-icon"
        devices: ["1", "2"]
    rules:
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: "#/components/schemas/rule"
      example:
        id: "1"
        name: "Turn on light when at 20h"
        operation: and
        when:
          - kind: device
            device_id: "1"
            state:
              on: false
          - kind: schedule
            time: "20:00"
            days: [1, 2, 3, 4, 5]
        then:
          - device_id: "1"
            action: turnOn
    rule:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        operation:
          type: string
          enum: [and, or]
        when:
          type: array
          items:
            $ref: "#/components/schemas/condition"
        then:
          type: array
          items:
            $ref: "#/components/schemas/action"
    condition:
      type: object
      properties:
        kind:
          type: string
          enum: [device, schedule]
      additionalProperties:
        type: any
      example:
        device:
          kind: device
          device_id: "1"
          state:
            on: true
        schedule:
          kind: schedule
          time: "12:00"
          days: [0, 1, 3, 6]
    action:
      type: object
      properties:
        device_id:
          type: string
        action:
          type: string
      example:
        device_id: "1"
        action: turnOn
    connect_body:
      type: object
      properties:
        category:
          type: string
          enum:
            - light
            - thermometer
        name:
          type: string
        divisions:
          type: array
          items:
            type: string
    action_body:
      type: object
      properties:
        action:
          type: string
    rename_body:
      type: object
      properties:
        name:
          type: string
    change_icon_body:
      type: object
      properties:
        icon:
          type: string
    device_uid_body:
      type: object
      properties:
        uid:
          type: string
    create_rule_body:
      type: object
      properties:
        name:
          type: string
        operation:
          type: string
          enum: [and, or]
        when:
          type: array
          items:
            $ref: "#/components/schemas/condition"
        then:
          type: array
          items:
            $ref: "#/components/schemas/action"
    error:
      type: object
      properties:
        error:
          type: string
      example:
        error: "Device not found"
